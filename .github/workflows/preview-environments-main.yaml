name: main CI Pipeline

on:
  push:
    branches:
      - main

jobs:

  check_repo:
    runs-on: ubuntu-latest
    outputs:
      repo_exists: ${{ steps.check.outputs.exists }}
    steps:
      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Check if repository exists
        id: check
        run: |
          exists=$(gh repo view er-sanjaysah/preview_eks-demo &>/dev/null && echo 'true' || echo 'false')
          echo "::set-output name=exists::$exists"
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  create_repo:
    runs-on: ubuntu-latest
    needs: check_repo
    if: ${{ needs.check_repo.outputs.repo_exists == 'false' }}
    steps:
      - name: Create repository
        run: |
          gh repo create er-sanjaysah/preview_eks-demo --public
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  clone:
    runs-on: ubuntu-latest
    needs: [check_repo, create_repo]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: er-sanjaysah/preview_eks-demo
          ref: main

  build:
    runs-on: ubuntu-latest
    needs: clone
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: myimg/webserver-simple:${{ github.sha }}

  update_image_tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: er-sanjaysah/preview_eks-demo
          ref: main

      - name: Update k8s canary manifest
        uses: mikefarah/yq@v4
        with:
          command: yq eval -i '.image.tag = "${{ github.sha }}"' ./helm/values.yaml

      - name: Show updated values.yaml
        run: cat ./helm/values.yaml

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update image tag to myimg/webserver-simple:${{ github.sha }}
          branch: develop
          file_pattern: ./helm/values.yaml

  deploy:
    runs-on: ubuntu-latest
    needs: update_image_tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: er-sanjaysah/preview_eks-demo
          ref: develop

      - name: Deploy to EKS
        run: |
          # Replace this with your deployment commands
          echo "Deploying to EKS cluster..."
          helm upgrade --install myapp ./helm --namespace=staging